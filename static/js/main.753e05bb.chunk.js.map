{"version":3,"sources":["components/Navbar.js","components/UserCard.js","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","onSetIsClicked","className","href","type","id","class","onClick","UserCard","email","first_name","last_name","avatar","src","alt","style","width","height","Loader","show","role","App","useState","isClicked","setIsClicked","data","setData","isLoader","setIsLoader","useEffect","Axios","get","then","response","console","log","map","val","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAwBeA,EAxBA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAId,OACI,mCACA,qBAAKC,UAAU,+CAAf,SACN,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,uBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAMF,UAAU,0BAElB,qBAAKA,UAAU,2BAA2BG,GAAG,yBAA7C,SACA,oBAAIC,MAAM,iCAAV,SACI,oBAAIA,MAAM,WAAV,SACA,wBAAQC,QAdI,WACZN,EAAe,IAaWC,UAAU,uBAAuBE,KAAK,SAAhE,yCCMOI,EArBE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC9C,OAEI,qBAAKV,UAAU,+BAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKW,IAAKD,EAAQE,IAAI,SAASC,MAAO,CAACC,MAAO,OAASC,OAAQ,YAEnE,qBAAKf,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,+BAAM,4BAAG,iCAASQ,EAAW,IAAIC,QACjC,mBAAGT,UAAU,QAAb,SAAqB,iCAASO,mBCH3CS,EATA,SAAC,GACZ,OADyB,EAAXC,KAGV,sBAAKjB,UAAU,kCAAf,UACC,qBAAKA,UAAU,2BAA2BkB,KAAK,SAA/C,SACD,sBAAMlB,UAAU,kBAAhB,0BAFA,OAGa,I,iBC0CNmB,MAzCf,WAEE,MAAkCC,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,MAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAsBA,OAJAC,qBAAU,WACRN,IAdAK,GAAY,GAEZE,IAAMC,IAAI,sCAAsCC,MAC9C,SAACC,GACCC,QAAQC,IAAI,qBACZT,EAAQO,EAASR,KAAKA,MAGtBG,GAAY,SAOf,CAACL,IAGF,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,eAAgBuB,IACxB,qBAAKtB,UAAU,MAAf,SAEGuB,GAAMA,EAAKW,KAAI,SAACC,GACf,OAAO,cAAC,EAAD,CAAU3B,WAAY2B,EAAI3B,WAAYC,UAAW0B,EAAI1B,UAAWF,MAAO4B,EAAI5B,MAAOG,OAAQyB,EAAIzB,cAIzG,cAAC,EAAD,CAAQO,KAAMQ,QC/BLW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.753e05bb.chunk.js","sourcesContent":["const Navbar = ({ onSetIsClicked }) => {\r\n    const clicked = () => {\r\n        onSetIsClicked(1);\r\n    }\r\n    return (\r\n        <>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">Lets Call</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul class=\"navbar-nav m-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n        <button onClick={clicked} className=\"btn btn-outline-dark\" type=\"submit\">GET USER DATA</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</nav>\r\n</>\r\n    )\r\n}\r\nexport default Navbar;\r\n\r\n","const UserCard = ({ email, first_name, last_name, avatar }) => {\r\n    return(\r\n        \r\n        <div className=\"container-card col-4 col-s-6\">\r\n            <div className=\"card\">\r\n                <div className='row'>\r\n                    <div className='col-3 col-s-12'>\r\n                        <img src={avatar} alt=\"Avatar\" style={{width: \"100%\" , height: \"100%\"}}/>\r\n                    </div>\r\n                    <div className='col-9 col-s-12'>\r\n                        <div className=\"container\">\r\n                            <span><b><center>{first_name+' '+last_name}</center></b></span>\r\n                            <p className='email'><center>{email}</center></p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserCard;\r\n","const Loader = ({ show }) => {\r\n    return (\r\n        (show) ?\r\n        <div className=\"container text-center my-5 py-5\">\r\n         <div className=\"spinner-border text-dark\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div> </div>: \"\"\r\n    )\r\n}\r\nexport default Loader;\r\n","import './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Navbar from './components/Navbar'\r\nimport UserCard from './components/UserCard'\r\nimport Loader from './components/Loader'\r\nimport Axios from 'axios';\r\n\r\nfunction App() {\r\n  // constant variables\r\n  const [isClicked, setIsClicked] = useState(0); //shareable state with Navbar\r\n  const [data, setData] = useState(null);\r\n  const [isLoader, setIsLoader] = useState(false);\r\n\r\n  // api call\r\n  const getUsers = () => {\r\n    //showing loader on beginning of api call\r\n    setIsLoader(true)\r\n\r\n    Axios.get(\"https://reqres.in/api/users?page=1\").then(\r\n      (response) => {\r\n        console.log(\"api data recieved\")\r\n        setData(response.data.data);\r\n\r\n        //hiding loader at the end of api call\r\n        setIsLoader(false)\r\n      }\r\n    )\r\n  }\r\n  // btn state lifing in navbar\r\n  useEffect(() => {\r\n    isClicked && getUsers();\r\n  }, [isClicked])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar onSetIsClicked={setIsClicked}/>\r\n      <div className='row'>\r\n        {/* mapping through the response of the api */}\r\n        {data&&data.map((val) => {\r\n          return <UserCard first_name={val.first_name} last_name={val.last_name} email={val.email} avatar={val.avatar}/>\r\n          \r\n        })}\r\n      </div>\r\n      <Loader show={isLoader}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}